/* Generated By:JavaCC: Do not edit this line. GlatConstants.java */
package glat;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface GlatConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LPAR = 5;
  /** RegularExpression Id. */
  int RPAR = 6;
  /** RegularExpression Id. */
  int LBRA = 7;
  /** RegularExpression Id. */
  int RBRA = 8;
  /** RegularExpression Id. */
  int DOTC = 9;
  /** RegularExpression Id. */
  int ASIG = 10;
  /** RegularExpression Id. */
  int SUM = 11;
  /** RegularExpression Id. */
  int MIN = 12;
  /** RegularExpression Id. */
  int DIV = 13;
  /** RegularExpression Id. */
  int AST = 14;
  /** RegularExpression Id. */
  int LT = 15;
  /** RegularExpression Id. */
  int GT = 16;
  /** RegularExpression Id. */
  int LET = 17;
  /** RegularExpression Id. */
  int GET = 18;
  /** RegularExpression Id. */
  int EQ = 19;
  /** RegularExpression Id. */
  int NEQ = 20;
  /** RegularExpression Id. */
  int VAR = 21;
  /** RegularExpression Id. */
  int START = 22;
  /** RegularExpression Id. */
  int TRAN = 23;
  /** RegularExpression Id. */
  int TO = 24;
  /** RegularExpression Id. */
  int ASSU = 25;
  /** RegularExpression Id. */
  int ASSE = 26;
  /** RegularExpression Id. */
  int THRE = 27;
  /** RegularExpression Id. */
  int JOIN = 28;
  /** RegularExpression Id. */
  int VOID = 29;
  /** RegularExpression Id. */
  int LOCK = 30;
  /** RegularExpression Id. */
  int UNLOCK = 31;
  /** RegularExpression Id. */
  int RETU = 32;
  /** RegularExpression Id. */
  int CALL = 33;
  /** RegularExpression Id. */
  int ID = 34;
  /** RegularExpression Id. */
  int NUM = 35;
  /** RegularExpression Id. */
  int DIGIT = 36;
  /** RegularExpression Id. */
  int CHAR = 37;
  /** RegularExpression Id. */
  int DOT = 38;
  /** RegularExpression Id. */
  int COMA = 39;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\";\"",
    "\":=\"",
    "\"+\"",
    "\"-\"",
    "\"/\"",
    "\"*\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"==\"",
    "\"!=\"",
    "\"var\"",
    "\"start\"",
    "\"trans\"",
    "\"->\"",
    "\"assume\"",
    "\"assert\"",
    "\"async\"",
    "\"join\"",
    "\"void\"",
    "\"lock\"",
    "\"unlock\"",
    "\"return\"",
    "\"sync\"",
    "<ID>",
    "<NUM>",
    "<DIGIT>",
    "<CHAR>",
    "\".\"",
    "\",\"",
  };

}
