

analyse( st ,rec  ) {
  
   if st is a node {
   	  analyze node
   	  return true/false depending if it has changed
   }
   
   // st is a list
   f = false;

   do  {
     l is the list of elements in st
     while ( l.hasNext() && changed )  {
        changed = analyse( l.next() ,true )
        if ( changed ) f=true;     
     }
    } while ( changed /\ st.rec()
    
    return f;
   
   
}
  
  
  
  
analyse( st ) {
  
  do {
    notStable = false;
     l = st.getSt();
     while ( l.hasNext() and ( moreWP || notStable ) )  {
		n = l.next();
		if ( n.isLeaf() ) {
			changed = analyze_node(n) 
			if ( n.isWiden() ) {
	 		    noStable = noStable || changed;
	 		}
		} else {
		   analyse(n);
		}
     }
    } while ( !stable )
  
}
  
  
  